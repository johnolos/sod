{"version":3,"file":"sim-8d4368c4.chunk.js","sources":["../../../ui/elemental_shaman/inputs.ts","../../../ui/elemental_shaman/presets.ts","../../../ui/elemental_shaman/sim.ts"],"sourcesContent":["import { Player } from '../core/player.js';\nimport { Spec } from '../core/proto/common.js';\nimport { ElementalShaman_Options_ThunderstormRange, ShamanShield } from '../core/proto/shaman.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport { EventID } from 'ui/core/typed_event.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const InThunderstormRange = InputHelpers.makeSpecOptionsBooleanInput<Spec.SpecElementalShaman>({\n\tfieldName: 'thunderstormRange',\n\t// id: ActionId.fromSpellId(59159),\n\tlabel: \"Thunderstorm In Range\",\n\tlabelTooltip: \"When set to true, thunderstorm casts will cause damage.\",\n\tgetValue: (player: Player<Spec.SpecElementalShaman>) => player.getSpecOptions().thunderstormRange == ElementalShaman_Options_ThunderstormRange.TSInRange,\n\tsetValue: (eventID: EventID, player: Player<Spec.SpecElementalShaman>, newValue: boolean) => {\n\t\tconst newOptions = player.getSpecOptions();\n\t\tif (newValue) {\n\t\t\tnewOptions.thunderstormRange = ElementalShaman_Options_ThunderstormRange.TSInRange;\n\t\t} else {\n\t\t\tnewOptions.thunderstormRange = ElementalShaman_Options_ThunderstormRange.TSOutofRange;\n\t\t}\n\t\tplayer.setSpecOptions(eventID, newOptions);\n\t},\n});\n\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecElementalShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n","import {\n  Consumes,\n  Flask,\n  Food,\n  Profession,\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n  AirTotem,\n  EarthTotem,\n  ElementalShaman_Options as ElementalShamanOptions,\n  FireTotem,\n  ShamanShield,\n  ShamanTotems,\n  WaterTotem,\n} from '../core/proto/shaman.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json'\n\nimport AdvancedApl from './apls/advanced.apl.json';\nimport DefaultApl from './apls/default.apl.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\nexport const ROTATION_PRESET_DEFAULT = PresetUtils.makePresetAPLRotation('Default', DefaultApl);\nexport const ROTATION_PRESET_ADVANCED = PresetUtils.makePresetAPLRotation('Advanced', AdvancedApl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n  name: 'Standard',\n  data: SavedTalents.create({\n    talentsString: '0532001523212351322301351-005052031',\n  }),\n};\n\nexport const Phase4Talents = {\n  name: 'Phase 4',\n  data: SavedTalents.create({\n    talentsString: '0533001523213351322301351-005050031',\n  }),\n};\n\nexport const DefaultOptions = ElementalShamanOptions.create({\n  shield: ShamanShield.WaterShield,\n  totems: ShamanTotems.create({\n    earth: EarthTotem.StrengthOfEarthTotem,\n    air: AirTotem.WrathOfAirTotem,\n    fire: FireTotem.TotemOfWrath,\n    water: WaterTotem.ManaSpringTotem,\n    useFireElemental: true,\n  }),\n});\n\nexport const OtherDefaults = {\n    distanceFromTarget: 20,\n    profession1: Profession.Engineering,\n    profession2: Profession.Tailoring,\n    nibelungAverageCasts: 11,\n}\n\nexport const DefaultConsumes = Consumes.create({\n  flask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});","import {\n\tClass,\n\tDebuffs,\n\tFaction,\n\tIndividualBuffs,\n\tPartyBuffs,\n\tRace,\n\tRaidBuffs,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport {\n\tAPLRotation,\n} from '../core/proto/apl.js';\nimport { Player } from '../core/player.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { TotemsSection } from '../core/components/totem_inputs.js';\n\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as Mechanics from '../core/constants/mechanics.js';\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecElementalShaman, {\n\tcssClass: 'elemental-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\twarnings: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatSpellPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatMana,\n\t\tStat.StatStamina,\n\t\tStat.StatIntellect,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t\tStat.StatMP5,\n\t],\n\tmodifyDisplayStats: (player: Player<Spec.SpecElementalShaman>) => {\n\t\tlet stats = new Stats();\n\t\tstats = stats.addStat(Stat.StatSpellCrit,\n\t\t\tplayer.getTalents().tidalMastery * 1 * Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE);\n\t\treturn {\n\t\t\ttalents: stats,\n\t\t};\n\t},\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 0.22,\n\t\t\t[Stat.StatSpellPower]: 1,\n\t\t\t[Stat.StatSpellCrit]: 0.67,\n\t\t\t[Stat.StatSpellHaste]: 1.29,\n\t\t\t[Stat.StatMP5]: 0.08,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\tother: Presets.OtherDefaults,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: RaidBuffs.create({\n\t\t\tarcaneBrilliance: true,\n\t\t\tdivineSpirit: true,\n\t\t\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\t\t\tmoonkinAura: true,\n\t\t}),\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: 2,\n\t\t}),\n\t\tdebuffs: Debuffs.create({\n\t\t\tfaerieFire: true,\n\t\t\tjudgementOfWisdom: true,\n\t\t\tcurseOfElements: true,\n\t\t}),\n\t},\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShamanInputs.ShamanShieldInput,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t],\n\texcludeBuffDebuffInputs: [\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tShamanInputs.InThunderstormRange,\n\t\t\tOtherInputs.TankAssignment,\n\t\t],\n\t},\n\tcustomSections: [\n\t\tTotemsSection,\n\t],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t\tPresets.Phase4Talents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_PRESET_DEFAULT,\n\t\t\tPresets.ROTATION_PRESET_ADVANCED,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (_: Player<Spec.SpecElementalShaman>): APLRotation => {\n\t\treturn Presets.ROTATION_PRESET_DEFAULT.rotation.rotation!;\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecElementalShaman,\n\t\t\ttooltip: specNames[Spec.SpecElementalShaman],\n\t\t\tdefaultName: 'Elemental',\n\t\t\ticonUrl: getSpecIcon(Class.ClassShaman, 0),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceUnknown,\n\t\t\t\t[Faction.Horde]: Race.RaceOrc,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n})\n\nexport class ElementalShamanSimUI extends IndividualSimUI<Spec.SpecElementalShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecElementalShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["InThunderstormRange","InputHelpers.makeSpecOptionsBooleanInput","fieldName","label","labelTooltip","getValue","player","getSpecOptions","thunderstormRange","ElementalShaman_Options_ThunderstormRange","TSInRange","setValue","eventID","newValue","newOptions","TSOutofRange","setSpecOptions","ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","values","value","ShamanShield","NoShield","tooltip","actionId","ActionId","fromSpellId","WaterShield","LightningShield","DefaultGear","PresetUtils.makePresetGear","ROTATION_PRESET_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultApl","ROTATION_PRESET_ADVANCED","AdvancedApl","StandardTalents","name","data","SavedTalents","create","talentsString","Phase4Talents","DefaultOptions","ElementalShamanOptions","shield","totems","ShamanTotems","earth","EarthTotem","StrengthOfEarthTotem","air","AirTotem","WrathOfAirTotem","fire","FireTotem","TotemOfWrath","water","WaterTotem","ManaSpringTotem","useFireElemental","OtherDefaults","distanceFromTarget","profession1","Profession","Engineering","profession2","Tailoring","nibelungAverageCasts","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","SPEC_CONFIG","registerSpecConfig","Spec","SpecElementalShaman","cssClass","cssScheme","knownIssues","warnings","epStats","Stat","StatIntellect","StatSpellPower","StatSpellHit","StatSpellCrit","StatSpellHaste","StatMP5","epReferenceStat","displayStats","StatHealth","StatMana","StatStamina","modifyDisplayStats","stats","Stats","addStat","getTalents","tidalMastery","Mechanics.SPELL_CRIT_RATING_PER_CRIT_CHANCE","talents","defaults","gear","Presets.DefaultGear","epWeights","fromMap","consumes","Presets.DefaultConsumes","Presets.StandardTalents","specOptions","Presets.DefaultOptions","other","Presets.OtherDefaults","raidBuffs","RaidBuffs","arcaneBrilliance","divineSpirit","giftOfTheWild","TristateEffect","TristateEffectImproved","moonkinAura","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","debuffs","Debuffs","faerieFire","judgementOfWisdom","curseOfElements","playerIconInputs","ShamanInputs.ShamanShieldInput","includeBuffDebuffInputs","excludeBuffDebuffInputs","otherInputs","inputs","ShamanInputs.InThunderstormRange","OtherInputs.TankAssignment","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.Phase4Talents","rotations","Presets.ROTATION_PRESET_DEFAULT","Presets.ROTATION_PRESET_ADVANCED","autoRotation","_","rotation","raidSimPresets","spec","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassShaman","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","Horde","RaceOrc","defaultGear","ElementalShamanSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}