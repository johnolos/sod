{"version":3,"file":"sim-9a5d38a0.chunk.js","sources":["../../../ui/enhancement_shaman/inputs.ts","../../../ui/enhancement_shaman/presets.ts","../../../ui/enhancement_shaman/sim.ts"],"sourcesContent":["import { Spec } from '../core/proto/common.js';\nimport {\n\tShamanImbue,\n\tShamanShield,\n\tShamanSyncType\n} from '../core/proto/shaman.js';\nimport { ActionId } from '../core/proto_utils/action_id.js';\n\nimport * as InputHelpers from '../core/components/input_helpers.js';\n\n// Configuration for spec-specific UI elements on the settings tab.\n// These don't need to be in a separate file but it keeps things cleaner.\n\nexport const ShamanShieldInput = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanShield>({\n\tfieldName: 'shield',\n\tvalues: [\n\t\t{ value: ShamanShield.NoShield, tooltip: 'No Shield' },\n\t\t{ actionId: ActionId.fromSpellId(57960), value: ShamanShield.WaterShield },\n\t\t{ actionId: ActionId.fromSpellId(49281), value: ShamanShield.LightningShield },\n\t],\n});\n\nexport const ShamanImbueMH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\n\tfieldName: 'imbueMh',\n\tvalues: [\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Main Hand Enchant' },\n\t\t{ actionId: ActionId.fromSpellId(58804), value: ShamanImbue.WindfuryWeapon },\n\t\t{ actionId: ActionId.fromSpellId(58790), value: ShamanImbue.FlametongueWeapon, text: 'R10' },\n\t\t{ actionId: ActionId.fromSpellId(58789), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9' },\n\t\t{ actionId: ActionId.fromSpellId(58796), value: ShamanImbue.FrostbrandWeapon },\n\t],\n});\n\nexport const ShamanImbueOH = InputHelpers.makeSpecOptionsEnumIconInput<Spec.SpecEnhancementShaman, ShamanImbue>({\n\tfieldName: 'imbueOh',\n\tvalues: [\n\t\t{ value: ShamanImbue.NoImbue, tooltip: 'No Off Hand Enchant' },\n\t\t{ actionId: ActionId.fromSpellId(58804), value: ShamanImbue.WindfuryWeapon },\n\t\t{ actionId: ActionId.fromSpellId(58790), value: ShamanImbue.FlametongueWeapon, text: 'R10' },\n\t\t{ actionId: ActionId.fromSpellId(58789), value: ShamanImbue.FlametongueWeaponDownrank, text: 'R9' },\n\t\t{ actionId: ActionId.fromSpellId(58796), value: ShamanImbue.FrostbrandWeapon },\n\t],\n});\n\nexport const SyncTypeInput = InputHelpers.makeSpecOptionsEnumInput<Spec.SpecEnhancementShaman>({\n\tfieldName: 'syncType',\n\tlabel: 'Sync/Stagger Setting',\n\tlabelTooltip:\n\t\t`Choose your sync or stagger option Perfect\n\t\t<ul>\n\t\t\t<li><div>Auto: Will auto pick sync options based on your weapons attack speeds</div></li>\n\t\t\t<li><div>None: No Sync or Staggering, used for mismatched weapon speeds</div></li>\n\t\t\t<li><div>Perfect Sync: Makes your weapons always attack at the same time, for match weapon speeds</div></li>\n\t\t\t<li><div>Delayed Offhand: Adds a slight delay to the offhand attacks while staying within the 0.5s flurry ICD window</div></li>\n\t\t</ul>`,\n\tvalues: [\n\t\t{ name: \"Automatic\", value: ShamanSyncType.Auto },\n\t\t{ name: 'None', value: ShamanSyncType.NoSync },\n\t\t{ name: 'Perfect Sync', value: ShamanSyncType.SyncMainhandOffhandSwings },\n\t\t{ name: 'Delayed Offhand', value: ShamanSyncType.DelayOffhandSwings },\n\t],\n});\n","import {\n\tConsumes,\n\tDebuffs,\n\tFlask,\n\tFood,\n\tRaidBuffs,\n\tTristateEffect\n} from '../core/proto/common.js';\nimport { SavedTalents } from '../core/proto/ui.js';\n\nimport {\n\tEnhancementShaman_Options as EnhancementShamanOptions,\n\tShamanImbue,\n\tShamanShield,\n\tShamanSyncType,\n} from '../core/proto/shaman.js';\n\nimport * as PresetUtils from '../core/preset_utils.js';\n\nimport BlankGear from './gear_sets/blank.gear.json';\n\nimport DefaultFt from './apls/default_ft.apl.json';\nimport DefaultWf from './apls/default_wf.apl.json';\nimport Phase3Apl from './apls/phase_3.apl.json';\n\n// Preset options for this spec.\n// Eventually we will import these values for the raid sim too, so its good to\n// keep them in a separate file.\n\nexport const DefaultGear = PresetUtils.makePresetGear('Blank', BlankGear);\n\nexport const ROTATION_FT_DEFAULT = PresetUtils.makePresetAPLRotation('Default FT', DefaultFt);\nexport const ROTATION_WF_DEFAULT = PresetUtils.makePresetAPLRotation('Default WF', DefaultWf);\nexport const ROTATION_PHASE_3 = PresetUtils.makePresetAPLRotation('Phase 3', Phase3Apl);\n\n// Default talents. Uses the wowhead calculator format, make the talents on\n// https://wowhead.com/classic/talent-calc and copy the numbers in the url.\nexport const StandardTalents = {\n\tname: 'Standard',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '053030152-30405003105021333031131031051',\n\t}),\n};\n\nexport const Phase3Talents = {\n\tname: 'Phase 3',\n\tdata: SavedTalents.create({\n\t\ttalentsString: '053030152-30505003105001333031131131051',\n\t}),\n};\n\nexport const DefaultOptions = EnhancementShamanOptions.create({\n\tshield: ShamanShield.LightningShield,\n\timbueMh: ShamanImbue.WindfuryWeapon,\n\timbueOh: ShamanImbue.FlametongueWeapon,\n\tsyncType: ShamanSyncType.Auto,\n});\n\nexport const DefaultConsumes = Consumes.create({\n\tflask: Flask.FlaskUnknown,\n\tfood: Food.FoodUnknown,\n});\n\nexport const DefaultRaidBuffs = RaidBuffs.create({\n\tgiftOfTheWild: TristateEffect.TristateEffectImproved,\n\tarcaneBrilliance: true,\n\tleaderOfThePack: true,\n\tmoonkinAura: true,\n\tdivineSpirit: true,\n\tbattleShout: TristateEffect.TristateEffectImproved,\n});\n\nexport const DefaultDebuffs = Debuffs.create({\n\tsunderArmor: true,\n\tcurseOfWeakness: TristateEffect.TristateEffectRegular,\n\tcurseOfElements: true,\n\tfaerieFire: true,\n\tjudgementOfWisdom: true,\n});\n\nexport const OtherDefaults = {\n};\n","import { TotemsSection } from '../core/components/totem_inputs.js';\nimport { IndividualSimUI, registerSpecConfig } from '../core/individual_sim_ui.js';\nimport { Player } from '../core/player.js';\nimport { APLRotation } from '../core/proto/apl.js';\nimport {\n\tClass,\n\tFaction,\n\tIndividualBuffs,\n\tItemSlot,\n\tPartyBuffs,\n\tPseudoStat,\n\tRace,\n\tSpec,\n\tStat,\n\tTristateEffect,\n} from '../core/proto/common.js';\nimport { ShamanImbue } from '../core/proto/shaman.js';\nimport { Stats } from '../core/proto_utils/stats.js';\nimport { getSpecIcon, specNames } from '../core/proto_utils/utils.js';\n\nimport * as BuffDebuffInputs from '../core/components/inputs/buffs_debuffs';\nimport * as OtherInputs from '../core/components/other_inputs.js';\nimport * as ShamanInputs from './inputs.js';\nimport * as Presets from './presets.js';\n\nconst SPEC_CONFIG = registerSpecConfig(Spec.SpecEnhancementShaman, {\n\tcssClass: 'enhancement-shaman-sim-ui',\n\tcssScheme: 'shaman',\n\t// List any known bugs / issues here and they'll be shown on the site.\n\tknownIssues: [\n\t],\n\n\t// All stats for which EP should be calculated.\n\tepStats: [\n\t\tStat.StatIntellect,\n\t\tStat.StatAgility,\n\t\tStat.StatStrength,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatExpertise,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellHaste,\n\t],\n\tepPseudoStats: [\n\t\tPseudoStat.PseudoStatMainHandDps,\n\t\tPseudoStat.PseudoStatOffHandDps,\n\t],\n\t// Reference stat against which to calculate EP. I think all classes use either spell power or attack power.\n\tepReferenceStat: Stat.StatAttackPower,\n\t// Which stats to display in the Character Stats section, at the bottom of the left-hand sidebar.\n\tdisplayStats: [\n\t\tStat.StatHealth,\n\t\tStat.StatStamina,\n\t\tStat.StatStrength,\n\t\tStat.StatAgility,\n\t\tStat.StatIntellect,\n\t\tStat.StatAttackPower,\n\t\tStat.StatMeleeHit,\n\t\tStat.StatMeleeCrit,\n\t\tStat.StatMeleeHaste,\n\t\tStat.StatExpertise,\n\t\tStat.StatArmorPenetration,\n\t\tStat.StatSpellPower,\n\t\tStat.StatSpellHit,\n\t\tStat.StatSpellCrit,\n\t\tStat.StatSpellHaste,\n\t],\n\n\tdefaults: {\n\t\t// Default equipped gear.\n\t\tgear: Presets.DefaultGear.gear,\n\t\t// Default EP weights for sorting gear in the gear picker.\n\t\tepWeights: Stats.fromMap({\n\t\t\t[Stat.StatIntellect]: 1.48,\n\t\t\t[Stat.StatAgility]: 1.59,\n\t\t\t[Stat.StatStrength]: 1.1,\n\t\t\t[Stat.StatSpellPower]: 1.13,\n\t\t\t[Stat.StatSpellHit]: 0, //default EP assumes cap\n\t\t\t[Stat.StatSpellCrit]: 0.91,\n\t\t\t[Stat.StatSpellHaste]: 0.37,\n\t\t\t[Stat.StatAttackPower]: 1.0,\n\t\t\t[Stat.StatMeleeHit]: 1.38,\n\t\t\t[Stat.StatMeleeCrit]: 0.81,\n\t\t\t[Stat.StatMeleeHaste]: 1.61, //haste is complicated\n\t\t\t[Stat.StatArmorPenetration]: 0.48,\n\t\t\t[Stat.StatExpertise]: 0, //default EP assumes cap\n\t\t}, {\n\t\t\t[PseudoStat.PseudoStatMainHandDps]: 5.21,\n\t\t\t[PseudoStat.PseudoStatOffHandDps]: 2.21,\n\t\t}),\n\t\t// Default consumes settings.\n\t\tconsumes: Presets.DefaultConsumes,\n\t\t// Default talents.\n\t\ttalents: Presets.StandardTalents.data,\n\t\t// Default spec-specific settings.\n\t\tspecOptions: Presets.DefaultOptions,\n\t\t// Default raid/party buffs settings.\n\t\traidBuffs: Presets.DefaultRaidBuffs,\n\t\tpartyBuffs: PartyBuffs.create({\n\t\t}),\n\t\tindividualBuffs: IndividualBuffs.create({\n\t\t\tblessingOfKings: true,\n\t\t\tblessingOfWisdom: TristateEffect.TristateEffectImproved,\n\t\t\tblessingOfMight: TristateEffect.TristateEffectImproved,\n\t\t}),\n\t\tdebuffs: Presets.DefaultDebuffs,\n\t},\n\n\t// IconInputs to include in the 'Player' section on the settings tab.\n\tplayerIconInputs: [\n\t\tShamanInputs.ShamanShieldInput,\n\t\tShamanInputs.ShamanImbueMH,\n\t\tShamanInputs.ShamanImbueOH,\n\t],\n\t// Buff and Debuff inputs to include/exclude, overriding the EP-based defaults.\n\tincludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.BlessingOfWisdom,\n\t\tBuffDebuffInputs.ManaSpringTotem,\n\t\tBuffDebuffInputs.SpiritBuff,\n\t],\n\texcludeBuffDebuffInputs: [\n\t\tBuffDebuffInputs.BleedDebuff,\n\t],\n\t// Inputs to include in the 'Other' section on the settings tab.\n\totherInputs: {\n\t\tinputs: [\n\t\t\tShamanInputs.SyncTypeInput,\n\t\t\tOtherInputs.TankAssignment,\n\t\t\tOtherInputs.InFrontOfTarget,\n\t\t],\n\t},\n\titemSwapSlots: [ItemSlot.ItemSlotMainHand, ItemSlot.ItemSlotOffHand],\n\tcustomSections: [\n\t\tTotemsSection,\n\t],\n\tencounterPicker: {\n\t\t// Whether to include 'Execute Duration (%)' in the 'Encounter' section of the settings tab.\n\t\tshowExecuteProportion: false,\n\t},\n\n\tpresets: {\n\t\t// Preset talents that the user can quickly select.\n\t\ttalents: [\n\t\t\tPresets.StandardTalents,\n\t\t\tPresets.Phase3Talents,\n\t\t],\n\t\t// Preset rotations that the user can quickly select.\n\t\trotations: [\n\t\t\tPresets.ROTATION_FT_DEFAULT,\n\t\t\tPresets.ROTATION_WF_DEFAULT,\n\t\t\tPresets.ROTATION_PHASE_3,\n\t\t],\n\t\t// Preset gear configurations that the user can quickly select.\n\t\tgear: [\n\t\t\tPresets.DefaultGear,\n\t\t],\n\t},\n\n\tautoRotation: (player: Player<Spec.SpecEnhancementShaman>): APLRotation => {\n\t\tconst hasT94P = player.getCurrentStats().sets.includes('Triumphant Nobundo\\'s Battlegear (4pc)')\n\t\t\t|| player.getCurrentStats().sets.includes('Nobundo\\'s Battlegear (4pc)')\n\t\t\t|| player.getCurrentStats().sets.includes('Triumphant Thrall\\'s Battlegear (4pc)')\n\t\t\t|| player.getCurrentStats().sets.includes('Thrall\\'s Battlegear (4pc)');\n\t\tconst options = player.getSpecOptions();\n\n\t\tif (hasT94P) {\n\t\t\tconsole.log(\"has set\");\n\t\t\treturn Presets.ROTATION_PHASE_3.rotation.rotation!;\n\t\t} else if (options.imbueMh == ShamanImbue.FlametongueWeapon) {\n\t\t\treturn Presets.ROTATION_FT_DEFAULT.rotation.rotation!;\n\t\t} else {\n\t\t\treturn Presets.ROTATION_WF_DEFAULT.rotation.rotation!;\n\t\t}\n\t},\n\n\traidSimPresets: [\n\t\t{\n\t\t\tspec: Spec.SpecBalanceDruid,\n\t\t\ttooltip: specNames[Spec.SpecBalanceDruid],\n\t\t\tdefaultName: 'Balance',\n\t\t\ticonUrl: getSpecIcon(Class.ClassDruid, 0),\n\n\t\t\ttalents: Presets.StandardTalents.data,\n\t\t\tspecOptions: Presets.DefaultOptions,\n\t\t\tconsumes: Presets.DefaultConsumes,\n\t\t\totherDefaults: Presets.OtherDefaults,\n\t\t\tdefaultFactionRaces: {\n\t\t\t\t[Faction.Unknown]: Race.RaceUnknown,\n\t\t\t\t[Faction.Alliance]: Race.RaceNightElf,\n\t\t\t\t[Faction.Horde]: Race.RaceTauren,\n\t\t\t},\n\t\t\tdefaultGear: {\n\t\t\t\t[Faction.Unknown]: {},\n\t\t\t\t[Faction.Alliance]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t\t[Faction.Horde]: {\n\t\t\t\t\t1: Presets.DefaultGear.gear,\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t],\n})\n\nexport class EnhancementShamanSimUI extends IndividualSimUI<Spec.SpecEnhancementShaman> {\n\tconstructor(parentElem: HTMLElement, player: Player<Spec.SpecEnhancementShaman>) {\n\t\tsuper(parentElem, player, SPEC_CONFIG);\n\t}\n}\n"],"names":["ShamanShieldInput","InputHelpers.makeSpecOptionsEnumIconInput","fieldName","values","value","ShamanShield","NoShield","tooltip","actionId","ActionId","fromSpellId","WaterShield","LightningShield","ShamanImbueMH","ShamanImbue","NoImbue","WindfuryWeapon","FlametongueWeapon","text","FlametongueWeaponDownrank","FrostbrandWeapon","ShamanImbueOH","SyncTypeInput","InputHelpers.makeSpecOptionsEnumInput","label","labelTooltip","name","ShamanSyncType","Auto","NoSync","SyncMainhandOffhandSwings","DelayOffhandSwings","DefaultGear","PresetUtils.makePresetGear","ROTATION_FT_DEFAULT","PresetUtils.makePresetAPLRotation","DefaultFt","ROTATION_WF_DEFAULT","DefaultWf","ROTATION_PHASE_3","Phase3Apl","StandardTalents","data","SavedTalents","create","talentsString","Phase3Talents","DefaultOptions","EnhancementShamanOptions","shield","imbueMh","imbueOh","syncType","DefaultConsumes","Consumes","flask","Flask","FlaskUnknown","food","Food","FoodUnknown","DefaultRaidBuffs","RaidBuffs","giftOfTheWild","TristateEffect","TristateEffectImproved","arcaneBrilliance","leaderOfThePack","moonkinAura","divineSpirit","battleShout","DefaultDebuffs","Debuffs","sunderArmor","curseOfWeakness","TristateEffectRegular","curseOfElements","faerieFire","judgementOfWisdom","SPEC_CONFIG","registerSpecConfig","Spec","SpecEnhancementShaman","cssClass","cssScheme","knownIssues","epStats","Stat","StatIntellect","StatAgility","StatStrength","StatAttackPower","StatMeleeHit","StatMeleeCrit","StatMeleeHaste","StatArmorPenetration","StatExpertise","StatSpellPower","StatSpellCrit","StatSpellHit","StatSpellHaste","epPseudoStats","PseudoStat","PseudoStatMainHandDps","PseudoStatOffHandDps","epReferenceStat","displayStats","StatHealth","StatStamina","defaults","gear","Presets.DefaultGear","epWeights","Stats","fromMap","consumes","Presets.DefaultConsumes","talents","Presets.StandardTalents","specOptions","Presets.DefaultOptions","raidBuffs","Presets.DefaultRaidBuffs","partyBuffs","PartyBuffs","individualBuffs","IndividualBuffs","blessingOfKings","blessingOfWisdom","blessingOfMight","debuffs","Presets.DefaultDebuffs","playerIconInputs","ShamanInputs.ShamanShieldInput","ShamanInputs.ShamanImbueMH","ShamanInputs.ShamanImbueOH","includeBuffDebuffInputs","BuffDebuffInputs.BlessingOfWisdom","BuffDebuffInputs.ManaSpringTotem","BuffDebuffInputs.SpiritBuff","excludeBuffDebuffInputs","BuffDebuffInputs.BleedDebuff","otherInputs","inputs","ShamanInputs.SyncTypeInput","OtherInputs.TankAssignment","OtherInputs.InFrontOfTarget","itemSwapSlots","ItemSlot","ItemSlotMainHand","ItemSlotOffHand","customSections","TotemsSection","encounterPicker","showExecuteProportion","presets","Presets.Phase3Talents","rotations","Presets.ROTATION_FT_DEFAULT","Presets.ROTATION_WF_DEFAULT","Presets.ROTATION_PHASE_3","autoRotation","player","hasT94P","getCurrentStats","sets","includes","options","getSpecOptions","console","log","rotation","raidSimPresets","spec","SpecBalanceDruid","specNames","defaultName","iconUrl","getSpecIcon","Class","ClassDruid","otherDefaults","defaultFactionRaces","Faction","Unknown","Race","RaceUnknown","Alliance","RaceNightElf","Horde","RaceTauren","defaultGear","EnhancementShamanSimUI","IndividualSimUI","constructor","parentElem","super"],"mappings":"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"}